/**
 * Note:编译乱码时 可在bat文件里加上DEFAULT_JVM_OPTS="-Dfile.encoding=UTF-8"，或直接在命令行后面追加；
 * 打包时-Pprofile=[dev|test|prod]；
 * tomcat运行命令tomcatRun、tomcatStop
 */

//buildscript中声明是gradle脚本自身需要使用的资源
buildscript {
    repositories {
        maven {url "http://maven.oschina.net/content/groups/public"}
        mavenCentral()
    }
    dependencies {
        //参考http://akhikhl.github.io/gretty-doc/Getting-started.html
        classpath 'org.akhikhl.gretty:gretty:+' //内嵌的web容器插件，可用于jetty和tomcat
    }
}

allprojects{
    //如果使用的ide是idea 先执行任务cleanIdea 再执行任务idea
    apply plugin: 'idea'
    apply plugin: 'eclipse-wtp'
    apply plugin: 'java'

    group = 'com.isp'
    version = '1.0-SNAPSHOT'

    sourceCompatibility = 1.8//编译JDK版本
    targetCompatibility = 1.8//目标JDK版本

    compileJava.options.encoding = 'UTF-8'
    compileTestJava.options.encoding = 'UTF-8'
    javadoc.options.encoding = 'UTF-8'
    javadoc.options.charSet = 'UTF-8'

    configurations {
        provided
    }
    sourceSets.main.compileClasspath += configurations.provided
    sourceSets.test.compileClasspath += configurations.provided
    sourceSets.test.runtimeClasspath += configurations.provided

}

ext {
    commonsLangVersion = "3.3.2"
    commonsIoVersion = "2.4"
    commonsCodecVersion = "1.9"
    commonsFileuploadVersion = "1.3.1"
    commonsBeanutilsVersion = "1.9.1"
    fastjsonVersion = "1.1.40"
    poiVersion = "3.9"
    logbackVersion = "1.1.3"
    slf4jVersion = "1.7.9"
    springVersion = "4.0.8.RELEASE"
    validatorVersion = "5.1.1.Final"
    mybatisVersion = "3.2.8"
    mybatisSpringVersion = "1.2.2"
    mysqlDriverVersion = "5.1.30"
    oracleDriverVersion = "10.2.0.4.0"
    druidVersion = "1.0.11"
    ehcacheVersion = "2.6.9"
    ehcacheWebVersion = "2.0.4"
    shiroVersion = "1.2.3"
    sitemeshVersion="2.4.2"
    guavaVersion="17.0"
}


subprojects{
    repositories {
        maven {url "http://maven.oschina.net/content/groups/public"}
        mavenCentral()
    }

    configurations{
        //所有依赖都排除commons-logging的包
        all*.exclude module:  "commons-logging"
    }
    dependencies {
        testCompile("junit:junit:4.11")
        compile("org.apache.commons:commons-lang3:$commonsLangVersion")
        compile("commons-io:commons-io:$commonsIoVersion")
        compile("commons-codec:commons-codec:$commonsCodecVersion")
        compile("commons-fileupload:commons-fileupload:$commonsFileuploadVersion")
        compile("commons-beanutils:commons-beanutils:$commonsBeanutilsVersion")
        //fastjson
        compile("com.alibaba:fastjson:$fastjsonVersion")
        //日志
        compile("ch.qos.logback:logback-core:$logbackVersion")
        compile("ch.qos.logback:logback-classic:$logbackVersion")
        compile("ch.qos.logback:logback-access:$logbackVersion")
        compile("org.slf4j:slf4j-api:$slf4jVersion")
        //common-logging 实际调用slf4j
        compile("org.slf4j:jcl-over-slf4j:$slf4jVersion")
        //java.util.logging 实际调sl4j
        compile("org.slf4j:jul-to-slf4j:$slf4jVersion")
        //cache
        compile("net.sf.ehcache:ehcache-core:$ehcacheVersion")
        compile("net.sf.ehcache:ehcache-web:$ehcacheWebVersion")
        //bean validate
        compile("org.hibernate:hibernate-validator:$validatorVersion")
        //spring
        compile("org.springframework:spring-core:$springVersion")
        compile("org.springframework:spring-beans:$springVersion")
        compile("org.springframework:spring-context:$springVersion")
        compile("org.springframework:spring-context-support:$springVersion")
        //web
        compile("org.springframework:spring-webmvc:$springVersion")
        compile("org.springframework:spring-web:$springVersion")
        compile("org.springframework:spring-oxm:$springVersion")
        provided("javax.servlet:servlet-api:2.5")
        //spring
        compile("org.springframework:spring-aop:$springVersion")
        compile("org.springframework:spring-tx:$springVersion")
        //spring orm
        compile("org.springframework:spring-orm:$springVersion")
        compile("org.springframework:spring-jdbc:$springVersion")
        //mybatis
        compile("org.mybatis:mybatis:$mybatisVersion")
        compile("org.mybatis:mybatis-spring:$mybatisSpringVersion")
        //aop
        compile("org.aspectj:aspectjrt:1.7.4")
        compile("org.aspectj:aspectjweaver:1.7.4")
        compile("cglib:cglib:3.1")
        //connection pool
        compile("com.alibaba:druid:$druidVersion")
        //jdbc driver
        runtime("mysql:mysql-connector-java:$mysqlDriverVersion")
        runtime("com.oracle:ojdbc14:$oracleDriverVersion")
        //工具
        compile("com.google.guava:guava:$guavaVersion")
    }
}
//定义Profile，区分不同的环境
//命令中添加参数-Pprofile=[dev|test|prod]
def defaultProperty(){
    return hasProperty('profile')?project['profile']:"dev"
}
//根据profile的值，加载不同的文件，生产properties对象，以便替换
def loadProperties(filePath){
   Properties props = new Properties()
    new File(filePath).withInputStream{
        stream -> props.load(stream)
    }
    props
}

project(':platform-common'){
    dependencies {
        //poi
        compile("org.apache.poi:poi:$poiVersion")
        compile("org.apache.poi:poi-ooxml:$poiVersion")
        compile("org.apache.poi:poi-ooxml-schemas:$poiVersion")
    }
}

project(':platform-web'){
    apply plugin:'war'
    //申请gretty插件
    apply plugin: 'org.akhikhl.gretty'
    //源集处理
    sourceSets {
        main {
            resources{
                exclude "config/**"
            }
        }
    }
    //自定义配置
    ext{
        env = defaultProperty()
        resourcesDir = "${projectDir}/src/main/resources"
        tomcatVersion = '7.0.59'
    }

    //拷贝配置文件到resources目录下，并根据运行环境替换变量值
    processResources{
        from("${resourcesDir}"){
            include "sysconfig.properties","logback.xml"
            filter(org.apache.tools.ant.filters.ReplaceTokens,
                    tokens:loadProperties("${resourcesDir}/config/${env}-config.properties"))
        }
    }

    //打包
    war{
        duplicatesStrategy = "EXCLUDE"
        war.archiveName = "${project.name}-${project.version}-${env}.war"
    }

    dependencies {
        compile project(":platform-common")
        compile project(":platform-security")


        //web
        compile("taglibs:standard:1.1.2")
        compile("javax.servlet:jstl:1.2")
        compile("opensymphony:sitemesh:$sitemeshVersion")
        providedCompile("javax.servlet.jsp:jsp-api:2.2")


    }

    gretty {
        // supported values:
        // 'jetty7', 'jetty8', 'jetty9', 'tomcat7', 'tomcat8'
        servletContainer = 'tomcat7'
    }
}


project(':platform-security'){
    dependencies {
        compile("org.apache.shiro:shiro-core:$shiroVersion")
        compile("org.apache.shiro:shiro-spring:$shiroVersion")
        compile("org.apache.shiro:shiro-cas:$shiroVersion")
        compile("org.apache.shiro:shiro-web:$shiroVersion")
        compile("org.apache.shiro:shiro-ehcache:$shiroVersion")
        compile project(":platform-common")
    }
}


task wrapper(type: Wrapper) {
    //定义GradleWrapper下载的Gradle版本
  gradleVersion = '2.5'
    //定义gradle下载路径，默认官方路径
  distributionUrl = "https://services.gradle.org/distributions/gradle-$gradleVersion-bin.zip"
}









